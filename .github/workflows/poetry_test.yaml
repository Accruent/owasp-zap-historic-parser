name: Test

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  black-formatting-check:
    name: Check formatting
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-python@v2.2.2
      - uses: psf/black@stable

#  test:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v1
#        with:
#          fetch-depth: 1
#
#      - name: Set up Python 3.8
#        uses: actions/setup-python@v1
#        with:
#          python-version: 3.8
#
#      - name: Install and configure Poetry
#        uses: snok/install-poetry@v1
#        with:
#          virtualenvs-create: true
#          virtualenvs-in-project: false
#          virtualenvs-path: ~/.virtualenvs
#          installer-parallel: true
#
#      - name: Cache poetry virtualenv
#        uses: actions/cache@v1
#        id: cache
#        with:
#          path: ~/.virtualenvs
#          key: poetry-${{ hashFiles('**/poetry.lock') }}
#          restore-keys: |
#            poetry-${{ hashFiles('**/poetry.lock') }}
#
#      - name: Install dependencies
#        run: poetry install
#        if: steps.cache.outputs.cache-hit != 'true'
#
#      - name: Run tests
#        run: |
#          poetry run invoke tests